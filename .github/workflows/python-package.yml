# Create a package and push it to a private repo
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Deploy Python package

on:
  workflow_dispatch: 
  release:
    types: [published]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # old dependencies ...

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     python -m pip install flake8 pytest
    #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # - name: Test with pytest
    #   run: |
    #     pytest

    - name: Build Distribution
      run: |
        pip install --upgrade pip wheel setuptools twine
        python setup.py sdist bdist_wheel

    - name: Publish package
      env:
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          REPOSITORY: ${{ secrets.REPOSITORY }}
      run: |
        twine upload --repository-url $REPOSITORY dist/* --verbose --username __token__
